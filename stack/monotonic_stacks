// prev greater

#include <iostream>
#include <vector>
#include <stack>

using namespace std;

void nextSmaller(vector<int> &v) {
    stack<int> s;
    vector<int> ans(v.size());
    // prev greater
    for(int i = 0; i<v.size(); ++i){
        
        while(!s.empty() && v[s.top()] <= v[i]){
            s.pop();
        }
        
        if(s.empty()){
            ans[i] = -1;
            // no smaller elements on the right
        }
        else{
            ans[i] = s.top();
        }
        
        s.push(i);
    }
    
    for(auto i : ans){
        cout<<i<<" ";
    }
}

int main() {
    vector<int> v{5, 2, 8, 21, 1, 1, 2};
    
    nextSmaller(v);

    return 0;
}




// PREV SMALLER

#include <iostream>
#include <vector>
#include <stack>

using namespace std;

void nextSmaller(vector<int> &v) {
    stack<int> s;
    vector<int> ans(v.size());
    // prev greater
    for(int i = 0; i<v.size(); ++i){
        
        while(!s.empty() && v[s.top()] >= v[i]){
            s.pop();
        }
        
        if(s.empty()){
            ans[i] = -1;
            // no smaller elements on the right
        }
        else{
            ans[i] = s.top();
        }
        
        s.push(i);
    }
    
    for(auto i : ans){
        cout<<i<<" ";
    }
}

int main() {
    vector<int> v{5, 2, 8, 21, 1, 1, 2};
    
    nextSmaller(v);

    return 0;
}




// NEXT GREATER
#include <iostream>
#include <vector>
#include <stack>

using namespace std;

void nextSmaller(vector<int> &v) {
    stack<int> s;
    vector<int> ans(v.size());
    // prev greater
    for(int i = v.size()-1; i>=0; --i){
        
        while(!s.empty() && v[s.top()] <= v[i]){
            s.pop();
        }
        
        if(s.empty()){
            ans[i] = -1;
            // no smaller elements on the right
        }
        else{
            ans[i] = s.top();
        }
        
        s.push(i);
    }
    
    for(auto i : ans){
        cout<<i<<" ";
    }
}

int main() {
    vector<int> v{5, 2, 8, 21, 1, 1, 2};
    
    nextSmaller(v);

    return 0;
}




// NEXT SMALLER
#include <iostream>
#include <vector>
#include <stack>

using namespace std;

void nextSmaller(vector<int> &v) {
    stack<int> s;
    vector<int> ans(v.size());
    // prev greater
    for(int i = v.size()-1; i>=0; --i){
        
        while(!s.empty() && v[s.top()] >= v[i]){
            s.pop();
        }
        
        if(s.empty()){
            ans[i] = -1;
            // no smaller elements on the right
        }
        else{
            ans[i] = s.top();
        }
        
        s.push(i);
    }
    
    for(auto i : ans){
        cout<<i<<" ";
    }
}

int main() {
    vector<int> v{5, 2, 8, 21, 1, 1, 2};
    
    nextSmaller(v);

    return 0;
}

